@startuml secrets_rotation
title Complete Secrets Rotation Workflow

actor Operator
participant SOPS
participant "Age Key" as Age
participant "Validation Script\n(validate-secrets.sh)" as Validator
participant Git
participant "Deployment Tool\n(nixos-rebuild/ansible)" as Deploy
participant "Target System" as System
participant "Verification\n(SSH/API test)" as Verify

== Phase 1: Edit Secret ==

Operator -> SOPS: sops secrets/users.yaml
activate SOPS

SOPS -> Age: Check age key at ~/.config/sops/age/keys.txt
Age --> SOPS: Key found

SOPS -> SOPS: Decrypt secrets/users.yaml for editing
SOPS --> Operator: Opens $EDITOR with decrypted content

note over Operator
  Operator modifies secret values:
  - New password hash: mkpasswd -m sha-512
  - New API token from provider console
  - Updated SSH key
end note

Operator -> SOPS: Save and exit editor
SOPS -> SOPS: Re-encrypt with age key
SOPS -> SOPS: Write encrypted file to disk
SOPS --> Operator: File saved (encrypted)
deactivate SOPS

== Phase 2: Validate Changes ==

Operator -> Validator: scripts/validate-secrets.sh
activate Validator

Validator -> Validator: Check all required secret files exist
Validator -> Validator: Validate YAML syntax
Validator -> Validator: Validate .sops.yaml configuration
Validator -> Validator: Test SOPS can decrypt each file

alt Validation passes
    Validator --> Operator: ✓ All validations passed\n- All secret files present\n- YAML syntax valid\n- SOPS metadata correct\n- Age key can decrypt all files
    deactivate Validator

    == Phase 3: Commit to Version Control ==

    Operator -> Git: git add secrets/users.yaml
    activate Git
    Operator -> Git: git commit -m "chore(secrets): rotate user passwords"
    Git -> Git: Commit encrypted file
    Git --> Operator: Commit created: abc123
    deactivate Git

    note over Git
      Only encrypted files are committed.
      Plaintext secrets never touch git.
    end note

    == Phase 4: Deploy to Systems ==

    Operator -> Deploy: Deploy command based on system type

    note over Deploy
      NixOS: sudo nixos-rebuild switch --flake .#xmsi
      Ansible: just ansible-deploy
    end note

    activate Deploy

    Deploy -> System: Apply new configuration
    activate System

    System -> SOPS: Decrypt secrets on target system
    activate SOPS

    SOPS -> Age: Check age key at /etc/sops/age/keys.txt (NixOS)\nor ~/.config/sops/age/keys.txt (Ansible)

    alt Deployment succeeds
        Age --> SOPS: Key found
        SOPS --> System: Decrypted secrets
        deactivate SOPS

        System -> System: Apply new secret values\n- Update password database\n- Reload services\n- Update credentials

        System --> Deploy: Configuration applied successfully
        deactivate System
        Deploy --> Operator: Deployment complete

        == Phase 5: Verify Changes ==

        Operator -> Verify: Run verification procedure
        activate Verify

        note over Verify
          Verification steps depend on secret type:
          - Password: SSH login test
          - API token: Test API call
          - SSH key: SSH connection test
        end note

        Verify -> System: Test new credentials
        activate System

        alt Verification succeeds
            System --> Verify: Authentication successful
            deactivate System
            Verify --> Operator: ✓ Rotation verified successfully\nOld credentials can be revoked
            deactivate Verify

            note over Operator
              **Success**: Rotation complete
              - New secret deployed
              - Verification passed
              - Safe to revoke old credentials
            end note

        else Verification fails
            System --> Verify: Authentication failed
            deactivate System
            Verify --> Operator: ✗ Verification failed\nInitiate rollback
            deactivate Verify

            == Rollback Procedure ==

            Operator -> Git: git revert abc123
            activate Git
            Git --> Operator: Revert commit created
            deactivate Git

            Operator -> Deploy: Re-deploy previous version
            activate Deploy
            Deploy -> System: Apply old configuration
            activate System
            System --> Deploy: Rollback complete
            deactivate System
            Deploy --> Operator: System restored to previous state
            deactivate Deploy

            note over Operator
              **Rollback Complete**:
              Investigate why new secret failed
              before attempting rotation again
            end note
        end

    else Deployment fails
        Age --> SOPS: Key not found or decryption failed
        SOPS --> System: Error
        deactivate SOPS
        System --> Deploy: Deployment failed
        deactivate System
        Deploy --> Operator: ERROR: Cannot decrypt secrets\n\nCheck age key deployment:\nsudo ls -la /etc/sops/age/keys.txt
        deactivate Deploy

        note over Operator
          **Deployment Failure**:
          - Verify age key exists on target
          - Check key permissions (600, root:root)
          - Verify .sops.yaml config matches key
        end note
    end

else Validation fails
    Validator --> Operator: ✗ Validation failed\n- YAML syntax error on line X\n- Missing required field: Y\n- SOPS metadata corrupted
    deactivate Validator

    note over Operator
      **Validation Failure**:
      Fix errors before committing:
      - Check YAML syntax
      - Verify all required fields
      - Re-run sops edit to fix metadata
    end note

    Operator -> SOPS: sops secrets/users.yaml (fix errors)
    note over Operator
      Loop back to Phase 1 to correct errors
    end note
end

note over Operator, System
  **Complete Workflow Stages**:
  1. Edit - Decrypt, modify, re-encrypt
  2. Validate - Syntax, schema, decryption test
  3. Commit - Version control (encrypted only)
  4. Deploy - Apply to target systems
  5. Verify - Test new credentials work

  **Emergency Rotation Timeline**:
  - Age key rotation: <30 minutes
  - API token rotation: <60 minutes
  - Password rotation: <4 hours
end note

@enduml
